=encoding utf8

=head1 TITLE

Synopsis 99: Glossary

=head1 AUTHORS

    Elizabeth Mattijsen (liz@dijkmat.nl)

=head1 VERSION

    Created: 26 June 2013

    Last Modified: 26 June 2013
    Version: 1

This document tries to define many of the terms used in the Synopsis.  It does
not have an Apocalypse or Exegesis predecessor.  It is intended as both a
quick introduction to terms used on the #perl6 channel (on freenode), as well
as a more permanent, and deeper source of explanations in the context of Perl6.

If you, as a reader, miss a term in a glossary, just add the term with the
explanation.  Or if you are not sure what the missing term means, just add a
header for the term.  Without doubt, someone else more knowledgable will add
the explanation later for you and everybody else.

=head1 A

=head2 adverb

=head2 adverbial pair

=head2 API

Application Programming Interface.

=head2 Apocalypse

=head2 array

=head2 attribute

=head2 auth

=head2 authority

=head2 autopun

=head1 B

=head2 backlog

=head1 C

=head2 caller

=head2 CALLER::

=head2 Camelia

=head2 camelia

=head2 capture

=head2 class

=head2 compilation unit

=head2 compile time

=head2 compunit

=head2 credentials

=head1 D

=head2 debugger

=head2 dev

=head2 distribution

=head2 dynamic

=head1 E

=head2 eager

=head2 ecosystem

=head2 edsel

=head2 eval

=head2 Exegesis

=head2 export

=head2 EXPORT::

=head1 F

=head2 fudge

=head1 G

=head2 GLOBAL::

=head2 github

=head2 good *

=head2 grammar

=head1 H

=head2 hash

=head2 hyper

=head1 I

=head2 import

=head2 install

=head2 installer

=head2 Int

=head2 int

=head2 interface

=head2 item

=head1 J

=head2 junction

=head2 jvm

=head1 K

=head2 karma

=head2 KISS

Keep It Simple, Stupid!

=head1 L

=head2 lazy

=head2 lexical

=head2 lexotic

=head1 M

=head2 match

=head2 metamodel

=head2 method

=head2 MMD

See L<multi-method dispatch>.

=head2 moarvm

=head2 module

=head2 MOP

=head2 multi

=head2 multi-method dispatch

=head2 my

=head2 MY::

=head1 N

=head2 named parameter

=head2 namespace

=head2 need

=head2 Niecza

=head2 null-PMC access

=head2 Num

=head2 number

=head2 nqp

=head1 O

=head2 our

=head2 OUR::

=head2 OUTER::

=head1 P

=head2 package

=head2 pair

=head2 Panda

=head2 Parrot

=head2 parse

=head2 PAST

=head2 Perlito

=head2 PIR

Parrot Intermediate Representation.

=head2 PMC

Parrot Magic Cookie.

=head2 pod

=head2 pod6

=head2 Positional

=head2 positional parameter

=head2 precedence

=head2 private

=head2 PROCESS::

=head2 producer

=head2 pull request

=head1 Q

=head2 QAST

=head1 R

=head2 race

=head2 roast

=head2 Rakudo

=head2 Rakudo *

=head2 rakudobug

=head2 regex

=head2 regexp

=head2 reification

=head2 reify

=head2 repository

=head2 require

=head2 revert

=head2 role

=head2 runtime

=head1 S

=head2 sanity test

=head2 scalar

=head2 segfault

=head2 segmentation fault

=head2 serialization

=head2 setting

=head2 sink context

=head2 sixplanet

=head2 slushy

=head2 spectest

=head2 star

=head2 sub

=head2 subroutine

=head2 Synopsis

=head1 T

=head2 thread

=head2 TimToady

=head2 TIMTOWTDI

There Is More Than One Way To Do It.

=head2 token

=head2 topic

=head2 trait

=head2 TTIAR

Two Terms In A Row.

=head1 U

=head2 unit

=head2 UNIT::

=head2 unslushing

=head1 V

=head2 ver

=head2 version

=head1 W

=head2 whatever

=head2 whitespace

=head1 X

=head1 Y

=head2 yoleaux

=head1 Z

=head1 *

=head2 .

=head2 ..

=head2 ...

=head2 :

=head2 ?

=head2 *

=head2 @_

=head2 $_

=head2 %_

=head2 ++

=for vim:set expandtab sw=4:
