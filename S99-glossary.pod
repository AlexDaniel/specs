=encoding utf8

=head1 TITLE

Synopsis 99: Glossary

=head1 AUTHORS

    Elizabeth Mattijsen (liz@dijkmat.nl)

=head1 VERSION

    Created: 26 June 2013

    Last Modified: 26 June 2013
    Version: 1

This document tries to define many of the terms used in the Synopsis.  It does
not have an Apocalypse or Exegesis predecessor.  It is intended as both a
quick introduction to terms used on the #perl6 channel (on freenode), as well
as a more permanent, and deeper source of explanations in the context of Perl6.

If you, as a reader, miss a term in a glossary, just add the term with the
explanation.  Or if you are not sure what the missing term means, just add a
header for the term.  Without doubt, someone else more knowledgable will add
the explanation later for you and everybody else.

=head1 A

=head2 actions

A class used to generate an L</AST> from the results of parsing text with a
L</grammar>.

=head2 adverb

See L<adverbial pair>.

=head2 adverbial pair

=head2 AFAICS

As Far As I Can See.

=head2 AFAICT

As Far As I Can Tell.

=head2 AFAIK

As Far As I Know.

=head2 API

Application Programming Interface.

=head2 Apocalypse

=head2 array

=head2 AST

Short for B<A>bstract B<S>yntax B<T>ree. Used in many places, including
L</actions>, L</PAST>, and L</QAST>.

=head2 attribute

=head2 auth

Way of deliberately ambiguously expressing L</author> or L</authority>.

=head2 author

=head2 authority

=head2 autopun

"Are you ignorant or apathetic?" - "I don't know, and I don't care."

=head1 B

=head2 backlog

That part of a discussion on an L</IRC> channel that you've missed.  If it is
not or no longer available in your IRC client, you can go to sites such as
L<http://irc.perl6.org> to see what has been logged for you.

=head1 C

=head2 caller

=head2 CALLER::

=head2 Camelia

The butterfly-like logo of Perl 6 as can be observed at L<http://perl6.org>.

=head2 camelia

The IRC-bot on #perl6 that will evaluate code for you in various version of
Perl 5, Perl 6 and NQP.

=head2 capture

=head2 class

=head2 compilation unit

=head2 compile time

=head2 compunit

See L</compilation unit>.

=head2 credentials

=head1 D

=head2 dalek

An IRC bot that reports when various projects have been updated. It gives
L</karma> to those who pushed the changes to the project.

=head2 debugger

=head2 dev

Either a developer (person), or a development version of a program, or a
branch for development in a repository.

=head2 dispatcher

=head2 distribution

A collection of 1 or more L</compunit>s for installing locally, or for loading
from a remote location.

=head2 dynamic

=head1 E

=head2 eager

=head2 ecosystem

=head2 edsel

Something that intends to please everyone by catering for everybody's taste,
yet in the end pleasing nobody, because nobody is catered for enough.

=head2 eval

=head2 Exegesis

=head2 export

=head2 EXPORT::

=head1 F

=head2 fudge

Way to temporarily mark tests in the L</spectest> for a specific Perl 6 version
as I<todo> (so that a failure of the test will be marked ok, and a pass will
be marked as an exception), or as I<skip> if they cause a L</compile-time> or
L</runtime> exception.

=head2 fork

The creation of another process in Perl 6.

Also, a feature of L</github> that copies a repository from one user to another,
to allow users to make changes to a repository without needing permissions on
the original project. After a user makes changes they will likely submit a
L</pull request>.

=head1 G

=head2 gist

=head2 git

The distributed source revision system used by many, if not all Perl 6
projects.

=head2 github

Online open source repository hoster using L</git>.

=head2 GLOBAL::

=head2 good *

Good morning/afternoon/evening.  Since the contributors are in many different
timezones, one contributor's morning is another contributor's evening.

=head2 grammar

A feature of Perl 6 that uses L</regex>es to implement a grammar for parsing
text. Perl 6 implementations use grammars themselves to parse the language. The
results of parsing with a grammar can be further passed on to L</actions>.

=head1 H

=head2 hash

=head2 hyper

Process data asynchronously when possible, but return the result data in the
order it would have been if the source data had been processed in a single
thread/process.

=head1 I

=head2 IIRC

If I Remember Correctly.

=head2 import

=head2 install

=head2 installer

=head2 Int

=head2 int

=head2 interface

=head2 invocant

=head2 IRC

Internet Relay Chat.

=head2 item

=head1 J

=head2 junction

=head2 JVM

Java Virtual Machine.

=head1 K

=head2 karma

=head2 KISS

Keep It Simple, Stupid!

=head1 L

=head2 lazy

=head2 lexical

=head2 lexotic

=head2 LTA

Less Than Awesome.

=head1 M

=head2 match

=head2 metamodel

=head2 method

=head2 MMD

See L</multi-method dispatch>.

=head2 MoarVM

A virtual machine designed specifically for L</NQP> and its L</MOP>.

=head2 module

=head2 MOP

Meta-Object Protocol.

=head2 multi

=head2 multi method

=head2 multi sub

=head2 multi-method dispatch

=head2 my

=head2 MY::

=head1 N

=head2 named parameter

=head2 namespace

=head2 need

=head2 Niecza

An implementation of Perl 6 targeting the .NET platform.

=head2 null-PMC access

=head2 Num

=head2 number

=head2 NQP

Short for B<N>ot B<Q>uite B<P>erl, a subset of Perl 6 suitable for tasks such as
implementing L</Rakudo>. Targets L</Parrot> and the L</JVM>, with work underway
on targeting L</MoarVM>.

=head1 O

=head2 our

=head2 OUR::

=head2 OUTER::

=head1 P

=head2 package

=head2 pad

=head2 pair

=head2 Panda

A Perl 6 program designed to make it easier to install L</module>s.

=head2 Parrot

A virtual machine designed to run Perl 6 and other dynamic languages.

=head2 parse

=head2 PAST

=head2 Perlito

=head2 PIR

Parrot Intermediate Representation.

=head2 PMC

Parrot Magic Cookie.

=head2 pod

B<P>lain B<O>l' B<D>ocumentation, a documentation format understood by Perl
6. See L</S26> for details.

=head2 pod6

Used to specify Perl 6's version of L</pod>, as opposed to Perl 5's.

=head2 Positional

=head2 positional parameter

=head2 precedence

=head2 private

=head2 PROCESS::

=head2 producer

=head2 proto

=head2 pull request

A feature of L</github> that's used after a user has L</fork>ed a project and
made changes to it that they wish to have in the main project.

=head2 p5

Short for Perl 5, the older brother of Perl 6.

=head2 p6

Short for Perl 6, the spunky little sister of Perl 5.

=head1 Q

=head2 QAST

=head1 R

=head2 race

Process data asynchronously when possible, and don't care in which order the
result data is returned.

=head2 roast

=head2 Rakudo

An implementation of Perl 6 originally targetting L</Parrot>, it now targets
Parrot, the L</JVM>, and (soon) L</MoarVM> through L</NQP>.

=head2 Rakudo *

=head2 rakudobug

A bug in L</rakudo>.  Usually used in contexts such as "/me submits rakudobug".

=head2 regex

Short for B<Reg>ular B<Ex>pressions, an easy way of parsing text for certain
kinds of information.

=head2 regexp

An alternative abbreviation of L</regex> that usually occurs in non-Perl 6
contexts.

=head2 reification

=head2 reify

=head2 repository

=head2 require

=head2 revert

=head2 role

=head2 runtime

=head1 S

=head2 sanity test

=head2 scalar

=head2 segfault

See L</segmentation fault>.

=head2 segmentation fault

=head2 serialization

=head2 setting

=head2 sink context

=head2 sixplanet

=head2 slushy

=head2 spectest

=head2 star

=head2 Str

=head2 sub

=head2 subroutine

=head2 Synopsis

=head1 T

=head2 thread

=head2 TimToady

IRC screen name for Larry Wall, creator of Perl. The name comes from the
pronunciation of L</TIMTOWTDI> as a word.

=head2 TIMTOWTDI

An abbreviation of "There Is More Than One Way To Do It".

=head2 token

=head2 topic

=head2 trait

=head2 TTIAR

Two Terms In A Row.

=head2 TMTOWTDI

An alternative form of L</TIMTOWTDI>. It occurs when the user replaces "There
Is" with "There's" (removing the I that goes in the other abbreviation).

=head1 U

=head2 unit

=head2 UNIT::

=head2 unslushing

=head1 V

=head2 ver

Short way to indicate L</version>.

=head2 version

=head2 VM

Virtual Machine.  Such as L</Parrot>, L</JVM> and L</MoarVM>.

=head2 v5

Stands for "Perl, version 5" and is used in code to indicate that the code is
Perl 5:

    use v5;

=head2 v6

Stands for "Perl, version 6" and is used in code to indicate that the code is
written in Perl 6:

    use v6;

=head1 W

=head2 whatever

=head2 whitespace

=head1 X

=head1 Y

=head2 yoleaux

The IRC-bot on #perl6 that is your personal assistant.

=head1 Z

=head1 *

=head2 .

=head2 ..

=head2 ...

=head2 :

Everybody wants the colon.

=head2 ?

=head2 *

=head2 @_

=head2 $_

=head2 %_

=head2 ++

Way to increase L</karma> on IRC.

=for vim:set expandtab sw=4:
